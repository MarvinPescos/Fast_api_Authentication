"""add_user_id_to_ratings

Revision ID: 0041a90393c1
Revises: add_cat_fact_subscriptions
Create Date: 2025-10-18 18:27:31.338630

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0041a90393c1'
down_revision = 'add_cat_fact_subscriptions'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_cat_fact_subscriptions_id'), table_name='cat_fact_subscriptions')
    op.drop_index(op.f('ix_cat_fact_subscriptions_user_id'), table_name='cat_fact_subscriptions')
    op.drop_table('cat_fact_subscriptions')
    
    # Add user_id column as nullable first
    op.add_column('ratings', sa.Column('user_id', sa.Integer(), nullable=True))
    
    # For existing ratings, we'll assign them to a default user (user_id=1)
    # This assumes there's at least one user in the database
    op.execute("UPDATE ratings SET user_id = 1 WHERE user_id IS NULL")
    
    # Now make the column not null
    op.alter_column('ratings', 'user_id', nullable=False)
    
    # Add foreign key constraint
    op.create_foreign_key(None, 'ratings', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'ratings', type_='foreignkey')
    op.drop_column('ratings', 'user_id')
    op.create_table('cat_fact_subscriptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('preferred_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_sent_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('total_sent', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('cat_fact_subscriptions_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('cat_fact_subscriptions_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('cat_fact_subscriptions_user_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_cat_fact_subscriptions_user_id'), 'cat_fact_subscriptions', ['user_id'], unique=False)
    op.create_index(op.f('ix_cat_fact_subscriptions_id'), 'cat_fact_subscriptions', ['id'], unique=False)
    # ### end Alembic commands ###
